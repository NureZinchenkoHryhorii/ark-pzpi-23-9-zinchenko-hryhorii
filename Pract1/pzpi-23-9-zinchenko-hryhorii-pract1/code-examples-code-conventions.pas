program PascalGuidelinesAll;

{$mode objfpc}{$H+}

uses
  SysUtils, Classes, Generics.Collections;

{=============================================================
 РЕКОМЕНДАЦІЯ 1. Мінімізуйте дублювання коду (принцип DRY)
=============================================================}
procedure Greet(name: String);
begin
  writeln('Hello, ', name);
end;

{=============================================================
 РЕКОМЕНДАЦІЯ 2. Уникайте “магічних чисел” — використовуйте константи
=============================================================}
const
  MIN_ADULT_AGE = 18;

{=============================================================
 РЕКОМЕНДАЦІЯ 3. Використовуйте масиви та записи для структурованих даних
=============================================================}
type
  TStudent = record
    Name: string;
    Age: integer;
  end;

{=============================================================
 РЕКОМЕНДАЦІЯ 4. Використовуйте generics для типобезпечних контейнерів
=============================================================}

var
  listNew: TList<string>;

{=============================================================
 РЕКОМЕНДАЦІЯ 5. Уникайте unit-циклів і залежностей між модулями
 (демонстрація через коментар, бо це потребує окремих unit-ів)
=============================================================}
// unit A використовує B;
// unit B не повинен використовувати A.

{=============================================================
 РЕКОМЕНДАЦІЯ 6. Використовуйте CamelCase для класів і PascalCase для процедур
=============================================================}
type
  TMyClass = class
  public
    procedure DoSomething;
  end;

procedure TMyClass.DoSomething;
begin
  writeln('Метод DoSomething виконано.');
end;

{=============================================================
 РЕКОМЕНДАЦІЯ 7. Використовуйте типи замість Variant
=============================================================}
type
  TPerson = record
    Name: string;
    Age: integer;
  end;

{=============================================================
 РЕКОМЕНДАЦІЯ 8. Обмежуйте доступ до внутрішніх даних (інкапсуляція)
=============================================================}
type
  TUser = class
  private
    FName: string;
  public
    property Name: string read FName write FName;
  end;

{=============================================================
 РЕКОМЕНДАЦІЯ 9. Ключові слова Pascal у нижньому регістрі
=============================================================}
// Використовується у всіх прикладах нижче
begin
if x > 0 then
writeln('Positive');
end;
{=============================================================
 РЕКОМЕНДАЦІЯ 10. Використовуйте exceptions для помилок, а не коди повернення
=============================================================}
procedure SaveFile(const FileName: string);
begin
  if FileName = '' then
    raise Exception.Create('Ім’я файлу не може бути порожнім');
  writeln('Файл "', FileName, '" успішно збережено.');
end;
